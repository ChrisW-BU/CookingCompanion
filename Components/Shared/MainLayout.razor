@inherits LayoutComponentBase
@inject CookCompAPI _api
@inject UserGlobal _user;
@inject NavigationManager _nav;
@inject ILocalStorageService _ls;

<div class="page">
    <main>
        <div class="top-row px-4">
            <div class="user-select-none">
                @titleStr &nbsp @if (_user.LoggedIn)
                {
                    <div style="display:inline" @onclick="LogOut">
                        <i class="fas fa-right-from-bracket"></i>
                        <span>Log Out</span>
                    </div>
                }
            </div>
            <div class="user-select-none" style="display:flex; align-items:center"><i class="fa-fw fas fa-bowl-food"></i>&nbsp<span class="d-sm-none">CC</span><span class="d-none d-sm-block">Cooking Companion</span></div>
        </div>

        <div class="@loginCSS">
            <LoginForm @ref="@loginObj" OnSuccessCallBack="SuccessfulCallBack" />
        </div>
        @if (_user.LoggedIn)
        {
            <div class="@bodyCSS
            ">
                <article class="content px-3">
                @Body
            </article>
        </div>
        }

    </main>
</div>

@code {
    string loginCSS = "";
    string bodyCSS = "d-none";
    private LoginForm loginObj = new();
    string titleStr = "";

    protected override async Task OnInitializedAsync()
    {
        await CheckLoggedInUser();
    }

    public async Task CheckLoggedInUser()
    {
        // Check local storage for user
        string lsu = "";
        try
        {
            lsu = await _ls.GetItemAsStringAsync("uls");

            int uId = Int32.Parse(lsu);

            if (uId > 0)
            {
                User? getUser = await _api.GetUser(uId);
                _user.SetUserInfo(getUser);
            }
        }
        catch { }

        //System.Diagnostics.Debug.WriteLine("Login CSS: " + loginObj.LoginCSS);
        if (_user.LoggedIn)
        {
            bodyCSS = "d-block";
            titleStr = "Welcome, " + _user.UserName + ". ";
            loginCSS = "d-none";
        }
        else
        {
            bodyCSS = "d-none";
            titleStr = "";
            loginCSS = "d-block";
        }
        StateHasChanged();
    }

    public void SuccessfulCallBack()
    {
        if (_user.LoggedIn && _user.UserName.Length > 0)
        {
            bodyCSS = "d-block";
            titleStr = "Welcome " + _user.UserName;
            loginCSS = "d-none";
        }
        else
        {
            bodyCSS = "d-none";
            titleStr = "";
            loginCSS = "d-block";
        }
        Refresh();
        StateHasChanged();
        _nav.NavigateTo("/", false);
    }

    public void Refresh()
    {
        // Hacky, but achieves the component refresh we need.
        //_nav.NavigateTo("api/cc");
    }

    public void LogOut()
    {
        _user.ResetUserInfo();
        _ls.SetItemAsync("uls", 0);
        _nav.NavigateTo("/", true);
    }
}
