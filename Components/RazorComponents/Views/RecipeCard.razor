@inject CookCompAPI _api

<div style="@CustomStyles" class="card w-card-item p-2 g-col-12 g-col-md-6 g-col-lg-4 user-select-none" @onclick="OnClickCall">
    <div class="row g-0" style="overflow:hidden;">
        <div class="col-4">
            <img src="@ImgUrl" class="img-fluid rounded-start rounded-end" alt="@Name">
        </div>
        <div class="col-8 text-center">
            <div class="card-body">
                <h5 class="card-title">@Name</h5>

                <div>
                    <i class="fa-fw far fa-clock"></i>&nbsp<span class="card-text"><small class="text-body-secondary">@Duration minutes</small></span>
                </div>
                <div>
                    <i class="fa-fw fas fa-users"></i>&nbsp<span class="card-text"><small class="text-body-secondary">Serves 4</small></span>
                </div>
                <div>
                    <span class="card-text">
                        @if (IsVege)
                        {
                            <small class="text-body-secondary">Vegetarian; </small>
                        }
                        @if(IsVegan)
                        {
                            <small class="text-body-secondary">Vegan; </small>
                        }
                        @if(!IsVege && !IsVegan)
                        {
                            <small class="text-body-secondary">Not suitable for vegetarians; </small>
                        }
                    </span>
                </div>
                <div class="grid gap-2 text-center">
                    <FavouriteStarIcon OnClickCall="OnFavouriteClick" IsFavourite="FavObj.IsFavourite" IsInteractive=true ColSize="3" /> <CompletedIcon ColSize="3" /> <VegetarianIcon ColSize="3" IsVege="@IsVege" />
                </div>
            </div>
        </div>
        @* <div>
            <p class="card-text">@Description</p>
        </div> *@
    </div>
</div>

@code {
    [Parameter]
    public int UserId { get; set; }

    public Favourite FavObj = new();

    [Parameter]
    public int Id { get; set; }

    [Parameter]
    public string Name { get; set; } = string.Empty;

    [Parameter]
    public string Description { get; set; } = string.Empty;

    [Parameter]
    public string Duration { get; set; } = string.Empty;

    [Parameter]
    public bool IsVege { get; set; }

    [Parameter]
    public bool IsVegan { get; set; }

    [Parameter]
    public string ImgUrl { get; set; } = string.Empty;

    [Parameter]
    public string CustomStyles { get; set; } = string.Empty;

    [Parameter]
    public DateTime LastModified { get; set; }

    [Parameter]
    public EventCallback OnClickCall { get; set; }

    [Parameter]
    public EventCallback OnFavouriteClick { get; set; }

    public string ImgPath { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        FavObj = new();

        if(UserId > 0)
        {
            FavObj = await _api.CheckIsFavourite(Id, UserId);
        }

        StateHasChanged();
    }

    public int GetMinsSinceModified()
    {
        TimeSpan ts = DateTime.Now - LastModified;
        return (int)ts.TotalMinutes;
    }
}