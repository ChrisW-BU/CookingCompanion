@inherits TableControlBase
@inject CookCompAPI _api

<table class="table table-striped table-hover">
    <thead>
        <tr>
            <td><b>Username</b></td>
            <td><b>Tasks Completed</b></td>
            <td><b>Questionnaire Completed</b></td>
            <td><b>Last Logged In</b></td>
            <td></td>
        </tr>
    </thead>
    <tbody>
        @foreach (User r in TableData)
        {
            <tr @onclick="(args)=> SelectUser(args, r.Id)">
                <td>
                    @r.Name
                </td>
                <td>
                    @r.TasksCompleted
                </td>
                <td>
                    @r.QuestionnaireCompleted
                </td>
                <td>
                    @r.LastLoggedIn.ToString("G");
                </td>
                <td>
                    <DeleteButtonControl OnClickCall="@(e => Delete(r.Id))" />
                </td>
            </tr>
        }
    </tbody>
</table>

@code {
    protected override async Task OnInitializedAsync()
    {
        await Refresh();

        //return base.OnInitializedAsync();
    }

    public async Task Refresh()
    {
        await GetUsers();
        //StateHasChanged();
    }

    public List<User> TableData { get; set; } = new();

    [Parameter]
    public EventCallback<int> RowClick { get; set; }

    private async Task GetUsers()
    {
        try
        {
            TableData = await _api.GetUserListAsync();
            if(TableData.Count > 0)
            {
                TableData = TableData.OrderBy(a => a.Name).ToList();
            }
        }
        catch {}

    }

    private async Task SelectUser(MouseEventArgs e, int id)
    {
        await RowClick.InvokeAsync(id);
    }

    private async Task Delete(int userId)
    {
        try
        {
            await _api.DeleteUserAsync(userId);
            await Refresh();
        }
        catch
        {

        }
    }

}
