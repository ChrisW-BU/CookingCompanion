@inherits TableControlBase
@inject CookCompAPI _api

<table class="table table-striped table-hover">
    <thead>
        <tr>
            <td><b>Ingredient</b></td>
            <td><b>Quantity</b></td>
            <td><b>Measurement</b></td>
            <td></td>
        </tr>
    </thead>
    <tbody>
        @foreach (RecipeIngredient r in TableData)
        {
            <tr>
                <td>
                    @r.IngredientName
                </td>
                <td>
                    @r.Quantity
                </td>
                <td>
                    @r.MeasurementName
                </td>
                <td>
                    <ButtonControl Colour="danger" Icon="fas fa-trash" Name="Delete" NoMargin=true OnClickCall="@(e => Delete(r.Id))"/>
                </td>
            </tr>
        }
    </tbody>
</table>

@code {
    [Parameter]
    public int RecipeId { get; set; }

    [Parameter]
    public List<RecipeIngredient> TableData { get; set; }

    public async Task GetIngredientNames()
    {
        if (TableData.Count > 0)
        {
            Ingredient? IngObj = new();
            MeasurementType? MesObj = new();
            foreach (RecipeIngredient r in TableData)
            {
                try
                {
                    IngObj = await _api.GetIngredientUniqueAsync(r.IngredientId);
                    if (IngObj != null)
                    {
                        r.IngredientName = IngObj.Name ?? "";
                    }

                    MesObj = await _api.GetMeasurementTypeUniqueAsync(r.MeasurementTypeId);
                    if (MesObj != null)
                    {
                        r.MeasurementName = MesObj.Name ?? "";
                    }

                }
                catch
                {

                }
            }
        }
    }

    protected override Task OnInitializedAsync()
    {
        GetIngredientNames();
        return base.OnInitializedAsync();
    }

    private async Task Delete(int ingredientId)
    {
        try
        {
            StateHasChanged();
            await _api.DeleteRecipeIngredientAsync(ingredientId);
        }
        catch
        {

        }
    }

}
