@page "/edit_ingredient/{CatchId}"
@inject CookCompAPI _api
@inject NavigationManager _nav

<h3>Edit Ingredient</h3>

@* @if (Ingredient != null)
{
    <h2>@Ingredient.Name</h2>
    @((MarkupString)Ingredient.Description)
}
<br />
<br /> *@

<FormInputText Name="Name" @bind-Value="Ingredient.Name" AutoComplete=false CssClass="form-control mb-3"/>
<FormInputTextArea Name="Description" @bind-Value="Ingredient.Description" AutoComplete=false CssClass="form-control mb-3"/>

<ButtonControl Colour="success" Icon="fas fa-save" Name="Save" OnClickCall="Save"/>
<ButtonControl Colour="danger" Icon="far fa-times-circle" Name="Cancel" OnClickCall="PageBack"/>

@code {
    [Parameter]
    public string CatchId { get; set; }

    [Parameter]
    public int IngredientId { get; set; }

    public Ingredient? Ingredient { get; set; }

    protected async override Task OnParametersSetAsync()
    {
        int ingId = Int32.Parse(CatchId);
        if (ingId > 0)
        {
            Ingredient = await _api.GetIngredientUniqueAsync(ingId);
        }
        else
        {
            Ingredient = new Ingredient();
        }
        await base.OnParametersSetAsync();
    }

    private async Task Save()
    {
        try
        {
            await _api.SaveIngredientAsync(Ingredient);
            PageBack();
        }
        catch { }
    }

    private async void PageBack()
    {
        _nav.NavigateTo("/ingredients/");
    }
}
