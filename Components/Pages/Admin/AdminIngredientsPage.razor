@page "/admin/ingredients"
@inject CookCompAPI _api
@inject NavigationManager _nav
@inject PageHistory _page

<PageTitle>CC - Ingredient Manager</PageTitle>
<PageBase>
    <h1>Ingredients</h1>

    <AlertItem Style="AlertItem.AlertStyle.Warning">
        This page is for the management of ingredient information. You can add, edit, and delete ingredients.
    </AlertItem>


    <FormBase>
        @foreach (var i in ingredients)
        {
            @* <li @onclick="() => OnClickEvent(i.Id)">@i.Name - @i.Description</li> *@
            <IngredientCard Name="@i.Name" Description="@i.Description" ImgUrl="@i.ImgUrl"
                            LastModified="@i.LastModified" OnClickCall="() => OnClickEvent(i.Id)" />
        }
    </FormBase>
</PageBase>

<ButtonContainer>
    <AddNewButtonControl OnClickCall="AddNewIngredient" />
    <BackButtonControl OnClickCall="PageBack" />
</ButtonContainer>


@code {
    protected List<Ingredient> ingredients = new();

    protected override async Task OnInitializedAsync()
    {
        ingredients = await _api.GetIngredientListAsync(10, 0);
        await base.OnInitializedAsync();
    }

    private void OnClickEvent(int ingredientId)
    {
        _api.ClearCacheAsync();
        _nav.NavigateTo("/admin/edit_ingredient/" + ingredientId);
        _page.AddPage("admin/ingredients");
    }

    private void AddNewIngredient()
    {
        _api.ClearCacheAsync();
        _nav.NavigateTo("/admin/edit_ingredient/" + 0);
        _page.AddPage("admin/ingredients");
    }

    private void PageBack()
    {
        if (_page.IsPrevious())
        {
            _api.ClearCacheAsync();
            _nav.NavigateTo(_page.GetPreviousPage());
        }
    }
}