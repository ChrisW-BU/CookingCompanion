@page "/admin/recipes"
@inject CookCompAPI _api
@inject NavigationManager _nav
@inject PageHistory _page
@inject UserGlobal _user

@if (_user.IsAdmin)
{
    <PageBase>
        <PageTitle>CC - Recipe Manager</PageTitle>
        <h3>Recipes</h3>

        <AlertItem Style="AlertItem.AlertStyle.Warning">
            This page is for the management of recipes. You can add, edit, and delete recipes as well as modify their ingredient lists and steps.
        </AlertItem>

        <div class="grid gap-3">
            @foreach (var r in recipes)
            {
                <RecipeCard Name="@r.Name" Description="@r.Description" ImgUrl="@r.ImgUrl"
                Duration="@r.Duration" IsVege="@r.IsVege" OnClickCall="() => OnClickEvent(r.Id)" />
            }
        </div>
        <ButtonContainer>
            <AddNewButtonControl OnClickCall="AddNewRecipe" />
            <BackButtonControl OnClickCall="PageBack" />
        </ButtonContainer>
    </PageBase>
}

@code {
    protected List<Recipe> recipes = new List<Recipe>();

    protected override async Task OnInitializedAsync()
    {
        recipes = await _api.GetRecipeListAsync(10, 0);
        await base.OnInitializedAsync();
    }

    private void OnClickEvent(int recipeId)
    {
        _api.ClearCacheAsync();
        _nav.NavigateTo("/admin/edit_recipe/" + recipeId);
        _page.AddPage("admin/recipes");
    }

    private void AddNewRecipe()
    {
        _api.ClearCacheAsync();
        _nav.NavigateTo("/admin/edit_recipe/" + 0);
        _page.AddPage("admin/recipes");
    }

    private void PageBack()
    {
        if (_page.IsPrevious())
        {
            _api.ClearCacheAsync();
            _nav.NavigateTo(_page.GetPreviousPage());
        }
    }
}
